name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        
    - name: Setup Java
      uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'sbt'
        
    - name: Install sbt
      run: |
        echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
        curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x99E82A75642AC823" | sudo apt-key add
        sudo apt-get update
        sudo apt-get install sbt
        
    - name: Setup Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.9'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        version: "latest"
        
    - name: Install Python dependencies
      run: uv sync
      
    - name: Run tests
      run: |
        sbt test
        uv run python -m scripts.download_dataset --help
        
    - name: Build assembly JAR
      run: sbt assembly
      
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Create sample dataset
      run: |
        mkdir -p release-assets
        echo -e "ham\tThis is a normal message" > release-assets/sample-data.tsv
        echo -e "spam\tFree money! Click here now!" >> release-assets/sample-data.tsv
        
    - name: Prepare release assets
      run: |
        cp target/scala-2.12/sparkml-dt-textanalysis-assembly-*.jar release-assets/
        cp README.md release-assets/
        cp LICENSE release-assets/
        
    - name: Generate release notes
      id: release_notes
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract notes for this version from CHANGELOG.md
          awk '/^## \['"${{ steps.get_version.outputs.VERSION }}"'\]/{flag=1; next} /^## \[/{flag=0} flag' CHANGELOG.md > release_notes.txt
        else
          echo "Release ${{ steps.get_version.outputs.VERSION }}" > release_notes.txt
          echo "" >> release_notes.txt
          echo "### Changes" >> release_notes.txt
          echo "- See commit history for detailed changes" >> release_notes.txt
        fi
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        body_path: release_notes.txt
        files: |
          release-assets/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
